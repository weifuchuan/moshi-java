package com.moshi.common.model;

import com.moshi.common.safe.JsoupFilter;
import io.jboot.db.annotation.Table;

import com.moshi.common.kit.BitKit;
import com.moshi.common.model.base.BaseAccount;

/** Generated by Jboot. */
@Table(tableName = "account", primaryKey = "id")
public class Account extends BaseAccount<Account> {
  public static final Account dao = new Account().dao();

  public static final String AVATAR_NO_AVATAR = ""; // 刚注册时使用默认头像

  public static final int STATUS_REG = 0; // 注册、未激活
  public static final int STATUS_LOCK = 1 << 0; // 锁定账号，无法做任何事情
  public static final int STATUS_LEANER = 1 << 1; // 正常、学习者
  public static final int STATUS_TEACHER = 1 << 2; // 正常、课程作者
  public static final int STATUS_MANAGER = 1 << 3; // 正常、管理员

  public boolean isStatusReg() {
    return getStatus() == 0;
  }

  public boolean isStatusLock() {
    return BitKit.at(this.getStatus(), 0) == 1;
  }

  public boolean isLearner() {
    return BitKit.at(this.getStatus(), 1) == 1;
  }

  public boolean isTeacher() {
    return BitKit.at(this.getStatus(), 2) == 1;
  }

  public boolean isManager() {
    return BitKit.at(this.getStatus(), 3) == 1;
  }

  public void toLock() {
    if (!isStatusLock()) {
      int status = getStatus();
      status += STATUS_LOCK;
      setStatus(status);
      this.update();
    }
  }

  public void toLearner() {
    if (!isLearner()) {
      int status = getStatus();
      status += STATUS_LEANER;
      setStatus(status);
      this.update();
    }
  }

  public void toTeacher() {
    if (!isTeacher()) {
      int status = getStatus();
      status += STATUS_TEACHER;
      setStatus(status);
      this.update();
    }
  }

  public void toManager() {
    if (!isManager()) {
      int status = getStatus();
      status += STATUS_MANAGER;
      setStatus(status);
      this.update();
    }
  }

  public void removeLock() {
    if (isStatusLock()) {
      int status = getStatus();
      status -= STATUS_LOCK;
      setStatus(status);
      this.update();
    }
  }

  public void removeLearner() {
    if (isLearner()) {
      int status = getStatus();
      status -= STATUS_LEANER;
      setStatus(status);
      this.update();
    }
  }

  public void removeTeacher() {
    if (isTeacher()) {
      int status = getStatus();
      status -= STATUS_TEACHER;
      setStatus(status);
      this.update();
    }
  }

  public void removeManager() {
    if (isManager()) {
      int status = getStatus();
      status -= STATUS_MANAGER;
      setStatus(status);
      this.update();
    }
  }

  /** 过滤掉 nickName 中的 html 标记，恶意脚本 */
  protected void filter(int filterBy) {
    JsoupFilter.filterAccountNickName(this);
  }

  public void removeSensitiveInfo() {
    setPassword(null);
    setIdentityNumber(null);
    setRealName(null);
  }
}
