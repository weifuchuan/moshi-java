package com.moshi.common.model;

import io.jboot.Jboot;
import io.jboot.db.annotation.Table;
import com.moshi.common.model.base.BaseArticleComment;
import io.jboot.support.redis.JbootRedis;

/** Generated by Jboot. */
@Table(tableName = "article_comment", primaryKey = "id")
public class ArticleComment extends BaseArticleComment<ArticleComment> {
  public static final ArticleComment dao = new ArticleComment().dao();

  public static final int STATUS_ORDINARY = 0;
  public static final int STATUS_TOP = 1;

  public long getLikeCount() {
    JbootRedis redis = Jboot.getRedis();
    Long cnt = redis.scard(String.format("like:article_comment:%d", getId()));
    return cnt == null ? 0 : cnt;
  }

  public boolean liked(int accountId) {
    return Jboot.getRedis().sismember(String.format("like:article_comment:%d", getId()), accountId);
  }

  public boolean like(int accountId) {
    JbootRedis redis = Jboot.getRedis();
    boolean has = redis.sismember(String.format("like:article_comment:%d", getId()), accountId);
    if (!has) {
      redis.sadd(String.format("like:article_comment:%d", getId()), accountId);
    }
    return !has;
  }

  public boolean unlike(int accountId) {
    JbootRedis redis = Jboot.getRedis();
    boolean has = redis.sismember(String.format("like:article_comment:%d", getId()), accountId);
    if (has) {
      redis.srem(String.format("like:article_comment:%d", getId()), accountId);
    }
    return has;
  }
}
