package com.moshi.common.model;

import com.moshi.common.kit.BitKit;
import com.moshi.common.model.base.BaseCourse;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Course extends BaseCourse<Course> {
  public static final Course dao = new Course().dao();

  public static final int STATUS_INIT = 0; // 初始
  public static final int STATUS_LOCK = 1; // 锁定
  public static final int STATUS_PASSED = 1 << 1; // 审核通过
  public static final int STATUS_PUBLISH = 1 << 2; // 发布
  public static final int STATUS_COMPLETE = 1 << 3; // 完结

  public static final int TYPE_COLUMN = 1; // 专栏
  public static final int TYPE_VIDEO = 2; // 视频

  public boolean isInit() {
    return getStatus() == 0;
  }

  public boolean isLock() {
    int status = getStatus();
    return BitKit.at(status, 0) == 1;
  }

  public boolean isPassed() {
    int status = getStatus();
    return BitKit.at(status, 1) == 1;
  }

  public boolean isPublish() {
    int status = getStatus();
    return BitKit.at(status, 2) == 1;
  }

  public boolean isComplete() {
    int status = getStatus();
    return BitKit.at(status, 3) == 1;
  }

  public void toLock() {
    int status = getStatus();
    status = BitKit.set(status, 0, 1);
    setStatus(status);
    update();
  }

  public void toUnlock() {
    int status = getStatus();
    status = BitKit.set(status, 0, 0);
    setStatus(status);
    update();
  }

  public void toPassed() {
    int status = getStatus();
    status = BitKit.set(status, 1, 1);
    setStatus(status);
    update();
  }

  public boolean toPublish() {
    int status = getStatus();
    status = BitKit.set(status, 2, 1);
    setStatus(status);
    setPublishAt(System.currentTimeMillis());
    return update();
  }

  public void toComplete() {
    int status = getStatus();
    status = BitKit.set(status, 3, 1);
    setStatus(status);
    update();
  }

  public void clearLock() {
    int status = getStatus();
    status = BitKit.set(status, 0, 0);
    setStatus(status);
    update();
  }

  public void clearPassed() {
    int status = getStatus();
    status = BitKit.set(status, 1, 0);
    setStatus(status);
    update();
  }

  public void clearPublish() {
    int status = getStatus();
    status = BitKit.set(status, 2, 0);
    setStatus(status);
    update();
  }
}
